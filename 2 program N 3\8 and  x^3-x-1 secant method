Simpson 3/8 rule

kill(all)$

fpprintprec:5$

X:[4.0,4.2,4.4,4.6,4.8,5.0,5.2]$

Y:[1.386,1.435,1.482, 1.526, 1.569, 1.609, 1.649]$

a:first(X)$

b:last(X)$

h:abs(first(X)-second(X))$

I:3*h/8*[1,3,3,2,3,3,1].Y$

print("Given Data Table is")$

X:push("x",X)$

Y:push("y",Y)$

table_form([X,Y])$

print("By Simpson's 3/8 th rule")$

'integrate(f(x),x,a,b)=I;



Program: write a program x^3-x-1=0 using intial approximation X=1 and X1=2 secant method

kill(all)$
fpprintprec:7$
f(x):=x^3-x-1$
x[0]:1$
x[1]:2$
x[i]:=float((x[i-2]*f(x[i-1])-x[i-1]*f(x[i-2]))/(f(x[i-1])-f(x[i-2])))$
n:8$
print("Given equation is",f(x)=0)$
print("Initial Approximations are ","x[0]=x[0],"and",'x[1]=x[1])$
N:[["Iteration No.","Approximate root x","f(x)"]]$
for i:2 thru n do (N:push([i-1,x[i],f(x[i])],N))$
table_form(reverse(N))$
print("Approximate root by Secant Method is x=",x[n])$

